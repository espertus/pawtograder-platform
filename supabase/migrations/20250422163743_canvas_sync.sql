create table "public"."class_sections" (
    "id" bigint generated by default as identity not null,
    "created_at" timestamp with time zone not null default now(),
    "class_id" bigint not null,
    "name" text not null,
    "canvas_course_id" bigint,
    "canvas_course_section_id" bigint
);


alter table "public"."class_sections" enable row level security;

alter table "public"."classes" drop column "canvas_id";

alter table "public"."user_roles" add column "class_section_id" bigint;

CREATE UNIQUE INDEX class_sections_pkey ON public.class_sections USING btree (id);

alter table "public"."class_sections" add constraint "class_sections_pkey" PRIMARY KEY using index "class_sections_pkey";

alter table "public"."class_sections" add constraint "class_sections_class_id_fkey" FOREIGN KEY (class_id) REFERENCES classes(id) not valid;

alter table "public"."class_sections" validate constraint "class_sections_class_id_fkey";

alter table "public"."user_roles" add constraint "user_roles_class_section_id_fkey" FOREIGN KEY (class_section_id) REFERENCES class_sections(id) not valid;

alter table "public"."user_roles" validate constraint "user_roles_class_section_id_fkey";

grant delete on table "public"."class_sections" to "anon";

grant insert on table "public"."class_sections" to "anon";

grant references on table "public"."class_sections" to "anon";

grant select on table "public"."class_sections" to "anon";

grant trigger on table "public"."class_sections" to "anon";

grant truncate on table "public"."class_sections" to "anon";

grant update on table "public"."class_sections" to "anon";

grant delete on table "public"."class_sections" to "authenticated";

grant insert on table "public"."class_sections" to "authenticated";

grant references on table "public"."class_sections" to "authenticated";

grant select on table "public"."class_sections" to "authenticated";

grant trigger on table "public"."class_sections" to "authenticated";

grant truncate on table "public"."class_sections" to "authenticated";

grant update on table "public"."class_sections" to "authenticated";

grant delete on table "public"."class_sections" to "service_role";

grant insert on table "public"."class_sections" to "service_role";

grant references on table "public"."class_sections" to "service_role";

grant select on table "public"."class_sections" to "service_role";

grant trigger on table "public"."class_sections" to "service_role";

grant truncate on table "public"."class_sections" to "service_role";

grant update on table "public"."class_sections" to "service_role";

create policy "anyone in class reads"
on "public"."class_sections"
as permissive
for select
to public
using (authorizeforclass(class_id));


create policy "instructors and graders can view for students in class"
on "public"."users"
as permissive
for select
to public
using (authorizeforinstructororgraderofstudent(user_id));



